apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "postgres.fullname" . }}
  labels:
    {{- include "postgres.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "postgres.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "postgres.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "postgres.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.PV.enabled }}
          env:
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: pgsecret
                key: pgPasswd
          volumeMounts:
          - mountPath: {{ .Values.PV.mountPath }}
            name:  {{ .Values.PV.volumeName }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - exec psql -U "postgres" -d itscout -c  "SELECT * from cis"
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - exec psql -U "postgres" -d itscout -c  "SELECT * from cis"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.PV.enabled }}
      volumes:
        - name:  {{ .Values.PV.volumeName }}
          persistentVolumeClaim:
            claimName: {{ .Values.PV.claimName }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
